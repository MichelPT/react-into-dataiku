"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[723],{1713:(e,t,a)=>{a.d(t,{A:()=>l});var r=a(5155);function l(e){let{children:t}=e;return(0,r.jsx)("main",{className:"flex-1 relative overflow-y-auto bg-gray-100 p-4 h-screen",children:t})}a(2115)},2431:(e,t,a)=>{a.d(t,{A:()=>g});var r=a(5155),l=a(2115),o=a(6874),s=a.n(o),n=a(5695),i=a(6474),c=a(3052);let u=e=>{switch(e){case"VSH-GR":return"vsh-calculation";case"VSH-DN":return"vsh-dn-calculation";case"SW INDONESIA":return"sw-calculation";case"SW SIMANDOUX":return"sw-simandoux";case"RGSA":case"DGSA":case"NGSA":return"rgsa-ngsa-dgsa";case"TRIM DATA":return"trim-data";case"DEPTH MATCHING":return"depth-matching";case"FILL MISSING":return"fill-missing";case"SMOOTHING":return"smoothing";case"NORMALIZATION":return"normalization";case"SPLICING/MERGING":return"splicing-merging";case"POROSITY CALCULATION":return"porosity";case"WATER RESISTIVITY CALCULATION":return"water-resistivity-calculation";case"RGBE-RPBE":return"rgbe-rpbe";case"AUTO FLUID":return"auto-fluid";case"RT RO":return"rt-ro";case"SWGRAD":return"swgrad";case"DNS-DNSV":return"dns-dnsv";case"GWD":return"gwd";default:return e.toLowerCase().replace(/\s+/g,"-")}},d=e=>{let{title:t,buttons:a,activeButton:o,routePrefix:n}=e,[d,g]=(0,l.useState)(new Set),f=e=>{let t=new Set(d);t.has(e)?t.delete(e):t.add(e),g(t)};return(0,r.jsxs)("div",{className:"bg-white rounded-lg shadow-sm p-2",children:[t&&(0,r.jsx)("h3",{className:"text-xs font-bold text-gray-700 mb-1",children:t}),(0,r.jsx)("div",{className:"flex flex-col gap-1",children:a.map(e=>{if("string"==typeof e){let t=u(e),a="".concat(n,"/").concat(t),l=o===t;return(0,r.jsx)(s(),{href:a,children:(0,r.jsx)("button",{className:"w-full text-xs font-medium text-left p-1 rounded border transition-colors duration-200 ".concat(l?"bg-gray-700 text-white border-gray-800":"text-black bg-gray-200 border-gray-300 hover:bg-gray-300"),children:e})},e)}{let t=d.has(e.label);return(0,r.jsxs)("div",{className:"space-y-0.5",children:[(0,r.jsxs)("button",{onClick:()=>f(e.label),className:"w-full text-xs font-medium text-left p-1 rounded border transition-colors duration-200 text-black bg-gray-200 border-gray-300 hover:bg-gray-300 flex items-center justify-between",children:[(0,r.jsx)("span",{children:e.label}),t?(0,r.jsx)(i.A,{className:"w-3 h-3"}):(0,r.jsx)(c.A,{className:"w-3 h-3"})]}),t&&(0,r.jsx)("div",{className:"ml-2 space-y-0.5",children:e.items.map(e=>{let t=u(e),a="".concat(n,"/").concat(t),l=o===t;return(0,r.jsx)(s(),{href:a,children:(0,r.jsx)("button",{className:"w-full text-xs font-normal text-left p-1 rounded border transition-colors duration-200 ".concat(l?"bg-gray-700 text-white border-gray-800":"text-gray-700 bg-gray-100 border-gray-200 hover:bg-gray-200"),children:e})},e)})})]},e.label)}})})]})},g=e=>{let{activeButton:t}=e,a=(0,n.usePathname)().startsWith("/data-prep"),l=a?"/data-prep/modules":"/dashboard/modules";return(0,r.jsxs)("aside",{className:"w-52 bg-gray-100 flex flex-col gap-2 p-2 border-l border-gray-300 overflow-y-auto h-screen",children:[(0,r.jsx)("div",{className:"text-xs font-bold text-gray-800 px-2 py-1",children:a?"Data Preparation":"Module Configuration"}),(0,r.jsx)("div",{className:"flex flex-col gap-2",children:a?(0,r.jsx)(d,{title:"Available Tools",buttons:["TRIM DATA","DEPTH MATCHING","FILL MISSING","SMOOTHING","NORMALIZATION","SPLICING/MERGING"],activeButton:t,routePrefix:l}):(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{title:"Data Preparation",buttons:["TRIM DATA","DEPTH MATCHING","FILL MISSING","SMOOTHING","NORMALIZATION","SPLICING-MERGING"],activeButton:t,routePrefix:l}),(0,r.jsx)(d,{title:"Interpretation",buttons:[{label:"VSH CALCULATION",items:["VSH-GR","VSH-DN"]},"POROSITY CALCULATION",{label:"SW CALCULATION",items:["SW INDONESIA","SW SIMANDOUX"]},"WATER RESISTIVITY CALCULATION"],activeButton:t,routePrefix:l}),(0,r.jsx)(d,{title:"Gas Oil Water Scanner (GOWS)",buttons:[{label:"RGSA",items:["RGSA","DGSA","NGSA"]},"RGBE-RPBE","AUTO FLUID","RT RO","SWGRAD","DNS-DNSV","GWD"],activeButton:t,routePrefix:l})]})})]})}},2577:(e,t,a)=>{a.d(t,{M:()=>i,q:()=>n});var r=a(5155),l=a(2115),o=a(9509);let s=(0,l.createContext)(void 0),n=e=>{let{children:t}=e,[a,n]=(0,l.useState)([]),[i,c]=(0,l.useState)([]),[u,d]=(0,l.useState)([]),[g,f]=(0,l.useState)([]),[h,y]=(0,l.useState)("default"),[m,A]=(0,l.useState)({}),[N,x]=(0,l.useState)({data:[],layout:{}}),[S,p]=(0,l.useState)(null),[I,b]=(0,l.useState)(!0),[w,v]=(0,l.useState)(null),T=o.env.NEXT_PUBLIC_API_URL;(0,l.useEffect)(()=>{let e=o.env.NEXT_PUBLIC_API_URL;(async()=>{try{if(!e)throw Error("API URL is not configured.");let t="".concat(e,"/api/list-wells");console.log("Fetching available wells from server: ".concat(t));let a=await fetch(t);if(!a.ok)throw Error("Network response from /api/list-wells was not ok");let r=await a.json();Array.isArray(r)&&n(r)}catch(e){console.error("Failed to fetch well list from server:",e)}try{let e=await fetch("http://127.0.0.1:5001/api/list-intervals");if(!e.ok)throw Error("Gagal mengambil daftar interval");let t=await e.json();Array.isArray(t)&&c(t)}catch(e){console.error("Error fetching intervals:",e)}})()},[]),(0,l.useCallback)(async()=>{if(0===u.length||!T){x({data:[],layout:{title:{text:"Please select a well to begin."}}}),b(!1);return}b(!0),v(null);try{let e=await fetch("".concat(T,"/api/get-plot"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selected_wells:u,selected_intervals:g})});if(!e.ok){let t=await e.json();throw Error(t.error||"Network response was not ok")}let t=await e.json();x(t)}catch(e){console.error("Failed to fetch plot data:",e),v(e instanceof Error?e.message:"An unknown error occurred"),x({data:[],layout:{}})}finally{b(!1)}},[u,g,T]);let G=async e=>{try{let t=await fetch("".concat(T,"/api/get-well-columns"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({wells:e})});if(!t.ok)throw Error("Network error saat ambil kolom well");let a=await t.json();A(a)}catch(e){console.error("Gagal mengambil kolom well:",e)}};(0,l.useEffect)(()=>{u.length>0&&G(u)},[u]);let O={availableWells:a,selectedWells:u,toggleWellSelection:e=>{d(t=>t.includes(e)?t.filter(t=>t!==e):[...t,e])},selectedIntervals:g,toggleInterval:e=>{f(t=>t.includes(e)?t.filter(t=>t!==e):[...t,e])},plotType:h,setPlotType:y,wellColumns:m,fetchWellColumns:G,plotFigure:N,setPlotFigure:x,selectedFilePath:S,setSelectedFilePath:p,isLoading:I,error:w,getCurrentLogs:()=>{console.log("Getting current logs from plot data:",N.data);let e=N.data.filter(e=>"scattergl"===e.type&&e.name&&!e.name.toLowerCase().includes("xover")&&"MARKER"!==e.name);console.log("Found log curves:",e.map(e=>e.name));let t=[];for(let a of e)if(a.name)try{let e=[],r=[];if(a.x&&a.x._inputArray instanceof Float64Array?e=Array.from(a.x._inputArray):Array.isArray(a.x)?e=a.x:a.x&&Array.isArray(a.x.data)&&(e=a.x.data),a.y&&a.y._inputArray instanceof Float64Array?r=Array.from(a.y._inputArray):Array.isArray(a.y)?r=a.y:a.y&&Array.isArray(a.y.data)&&(r=a.y.data),0===e.length||0===r.length){console.log("No valid data arrays for log ".concat(a.name));continue}let l=[];for(let t=0;t<r.length;t++){let a=Number(r[t]),o=e[t],s=null!=o?Number(o):null;isNaN(a)||null!==s&&isNaN(s)||l.push([a,s])}if(0===l.length){console.log("No valid data points found for log ".concat(a.name));continue}console.log("Processed ".concat(l.length," points for log ").concat(a.name)),t.push({curveName:a.name,data:l,wellName:u[0]||"Unknown Well",plotData:N.data})}catch(e){console.error("Error processing log ".concat(a.name,": ").concat(e))}return console.log("Transformed logs:",t),t},availableIntervals:i,plotData:N.data,setPlotData:e=>x(t=>({...t,data:e}))};return(0,r.jsx)(s.Provider,{value:O,children:t})},i=()=>{let e=(0,l.useContext)(s);if(void 0===e)throw Error("useDashboard must be used within a DashboardProvider");return e}}}]);